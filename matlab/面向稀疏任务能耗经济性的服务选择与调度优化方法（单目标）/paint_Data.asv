clear
clc
subtask_num = 10;

Avg_Std_idle = [
%                 0.2,0.1;
%                 0.3,0.1;
%                 0.4,0.1;
            0.5, 0.1;
%                 0.6,0.1;
%                 0.7,0.1;
%                 0.8,0.1;
            ];
Energy_dimensionless_value = ones(size(Avg_Std_idle, 1), 2);
Fitness_QoS_value = ones(size(Avg_Std_idle, 1), 2);
filename_set = [
%            1111;
%            1011;
%            1101;
%            1110;
%            1100;
%            1010;
%             1001;
            ];

for ii = 1:size(Avg_Std_idle, 1)

    for jj = 1:size(filename_set, 1)
        source_file = ['C:\Users\Administrator\Documents\我的坚果云\A博士文件\A科研工作\00科技论文写作指南\Matlab\模拟数据集\simulationData', num2str(Avg_Std_idle(ii, 1) * 10), num2str(Avg_Std_idle(ii, 2) * 10), '.xlsx'];
        objective_file = 'C:\Users\Administrator\Documents\我的坚果云\A博士文件\A科研工作\00科技论文写作指南\Matlab\模拟数据集\simulationData.xlsx';
        source_Data_M = 'Data_M';
        objective_Data_M = [source_Data_M, num2str(Avg_Std_idle(ii, 1) * 10), num2str(Avg_Std_idle(ii, 2) * 10), '-', num2str(filename_set(jj))];
        source_Data_M_Fitness = 'Data_M-Fitness';
        objective_Data_M_Fitness = [source_Data_M_Fitness, num2str(Avg_Std_idle(ii, 1) * 10), num2str(Avg_Std_idle(ii, 2) * 10), '-', num2str(filename_set(jj))];
        source_Data_M_E = 'Data_M_E';
        objective_Data_M_E = [source_Data_M_E, num2str(Avg_Std_idle(ii, 1) * 10), num2str(Avg_Std_idle(ii, 2) * 10), '-', num2str(filename_set(jj))];
        source_Data_M_E_Fitness = 'Data_M_E-Fitness';
        objective_Data_M_E_Fitness = [source_Data_M_E_Fitness, num2str(Avg_Std_idle(ii, 1) * 10), num2str(Avg_Std_idle(ii, 2) * 10), '-', num2str(filename_set(jj))];
        source_Data_M_E_gantt = 'Data_M_E-gantt';
        objective_Data_M_E_gantt = [source_Data_M_E_gantt, num2str(Avg_Std_idle(ii, 1) * 10), num2str(Avg_Std_idle(ii, 2) * 10), '-', num2str(filename_set(jj))];

        copyfile(source_file, objective_file)
        save('current_parameters')
        %% 生成M方法和M_E方法的目标值收敛数据，以及M_E方法的甘特图数据
        clear
        Main_M
        load('current_parameters')
        save(source_Data_M_Fitness, 'Individual_best_fitness');
        clear
        load('current_parameters')
        movefile([source_Data_M, '.mat'], [objective_Data_M, '.mat'])
        movefile([source_Data_M_Fitness, '.mat'], [objective_Data_M_Fitness, '.mat'])

        clear
        Main_M_E
        load('current_parameters')
        save(source_Data_M_E_Fitness, 'Individual_best_fitness');
        save(source_Data_M_E_gantt, 'Individual', 'Occupancy', 'Time_elasticity', 'Individual_Start_candidate_service', 'Individual_End_candidate_service', 'Individual_Start_logistics', 'Individual_End_logistics');
        clear
        load('current_parameters')
        movefile([source_Data_M_E, '.mat'], [objective_Data_M_E, '.mat'])
        movefile([source_Data_M_E_Fitness, '.mat'], [objective_Data_M_E_Fitness, '.mat'])
        movefile([source_Data_M_E_gantt, '.mat'], [objective_Data_M_E_gantt, '.mat'])

        %% 画M方法和M_E方法的目标收敛图，以及M_E方法的甘特图
        % 画目标收敛图
        save('current_parameters')
        load(objective_Data_M_Fitness)
        figure
        paint_fitness(Individual_best_fitness, 'r')
        hold on
        clear
        load('current_parameters')
        load(objective_Data_M_E_Fitness)
        paint_fitness(Individual_best_fitness, 'g')
        hold off
        load('current_parameters')
        title([objective_Data_M_Fitness, objective_Data_M_E_Fitness])

        % 画M_E方法的甘特图
        clear
        load('current_parameters')
        load(objective_Data_M_E_gantt)
        paint_gantt(Individual, Occupancy, Time_elasticity, Individual_Start_candidate_service, Individual_End_candidate_service, Individual_Start_logistics, Individual_End_logistics);

        % 收集M方法和M_E方法的预热能耗数据
        clear
        load('current_parameters')
        load([objective_Data_M, '.mat'])
        Energy_dimensionless_value(jj, 1) = best_individual_Energy;
        save('Energy_dimensionless_value', 'Energy_dimensionless_value') % 存储M方案的Energy节约程度

        Fitness_QoS_value(jj, 1) = best_individual_QoS;
        save('Fitness_QoS_value', 'Fitness_QoS_value') % 存储M方案的QoS满意度

        clear
        load('current_parameters')
        load([objective_Data_M_E, '.mat'])
        load('Energy_dimensionless_value')
        Energy_dimensionless_value(jj, 2) = best_individual_Energy; % 将M_E方案的Energy节约程度加入到变量Energy_dimensionless_value中
        save('Energy_dimensionless_value', 'Energy_dimensionless_value')

        load('Fitness_QoS_value')
        Fitness_QoS_value(jj, 2) = best_individual_QoS; % 将ME方案的QoS满意度加入到Fitness_QoS_value变量中
        save('Fitness_QoS_value', 'Fitness_QoS_value')
    end

end

%% 画M方法和M_E方法节约的能耗对比图和QoS对比图
clear
load('Energy_dimensionless_value')
figure
bar(Energy_dimensionless_value)
title('Energy')

clear
load('Fitness_QoS_value')
figure
bar(Fitness_QoS_value)
title('QoS')
